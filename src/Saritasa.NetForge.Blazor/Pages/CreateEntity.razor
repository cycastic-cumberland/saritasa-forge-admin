@using Saritasa.NetForge.Blazor.Controls
@using Saritasa.NetForge.Blazor.Controls.CustomFields
@using Saritasa.NetForge.Blazor.Extensions
@using Saritasa.NetForge.Blazor.Infrastructure.Helpers
@using Saritasa.NetForge.UseCases.Metadata.GetEntityById

@inherits MvvmComponentBase<Saritasa.NetForge.Mvvm.ViewModels.CreateEntity.CreateEntityViewModel>

@if (ViewModel.IsEntityExists)
{
    <MudBreadcrumbs Items="breadcrumbItems"></MudBreadcrumbs>

    var title = $"Create {ViewModel.Model.DisplayName.ToMeaningfulName()}";
    <PageTitle>@title</PageTitle>
    <MudText Class="pb-4" Typo="Typo.h4">@title</MudText>

    <MudGrid Justify="Justify.Center">
        <MudItem xs="6">
            <EditForm Model="ViewModel.Model.EntityInstance" OnValidSubmit="ViewModel.CreateEntityAsync">
                <div class="d-flex flex-column flex-grow-1 gap-4">
                    @foreach (var property in ViewModel.Model.Properties)
                    {
                        var componentType = CustomFieldHelper.GetComponentType(property);
                        var parameters = new Dictionary<string, object>
                        {
                            { nameof(CustomField.Property), property },
                            { nameof(CustomField.EntityInstance), ViewModel.Model.EntityInstance }
                        };

                        if (property.UploadFileStrategy is not null)
                        {
                            parameters.Add(
                                nameof(UploadImage.OnFileSelected),
                                (Action<PropertyMetadataDto, IBrowserFile?>)ViewModel.HandleSelectedFile);
                        }

                        <DynamicComponent Type="componentType" Parameters="parameters" />
                    }

                    <div class="d-flex flex-row gap-4 pt-4">
                        <MudButton Variant="Variant.Outlined" OnClick="NavigateToEntityDetails">
                            Cancel
                        </MudButton>
                        <MudButton Variant="Variant.Outlined" Color="Color.Success" ButtonType="ButtonType.Submit">
                            Save
                        </MudButton>
                    </div>
                </div>
            </EditForm>
        </MudItem>
    </MudGrid>
}
else
{
    <NotFound />
}
